from dotenv import dotenv_values


env = dotenv_values('.env')

CONNECTION_CONFIG = {
    'host': env['HOST'],
    'password': env['PASSWORD'],
    'raise_on_warnings': True,
    'user': env['USER'],
}

DB = 'puc_database_restaurant'

DB_CREATE_QUERY = 'CREATE DATABASE IF NOT EXISTS {db_name} DEFAULT CHARACTER SET "UTF8MB4"'.format(
    db_name=DB)

DB_DROP_QUERY = 'DROP DATABASE IF EXISTS {db_name}'.format(db_name=DB)

DB_CLIENT = 'Client'

DB_CLIENT_ADDRESS_COLUMN = 'address'
DB_CLIENT_BIRTHDATE_COLUMN = 'birthdate'
DB_CLIENT_CPF_COLUMN = 'cpf'
DB_CLIENT_EMAIL_COLUMN = 'email'
DB_CLIENT_GENDER_COLUMN = 'gender'
DB_CLIENT_NAME_COLUMN = 'name'
DB_CLIENT_PASSWORD_COLUMN = 'password'

DB_CLIENT_COLUMNS = (DB_CLIENT_CPF_COLUMN, DB_CLIENT_ADDRESS_COLUMN, DB_CLIENT_BIRTHDATE_COLUMN, DB_CLIENT_EMAIL_COLUMN, DB_CLIENT_NAME_COLUMN,
                     DB_CLIENT_PASSWORD_COLUMN, DB_CLIENT_GENDER_COLUMN)


DB_CLIENT_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} CHAR(11) NOT NULL,
    {1} VARCHAR(120) NOT NULL,
    {2} DATE NOT NULL,
    {3} VARCHAR(45) NOT NULL,
    {4} VARCHAR(45) NOT NULL,
    {5} CHAR(6) NOT NULL,
    {6} VARCHAR(45) NULL,
    PRIMARY KEY ({0}))
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_CLIENT, *DB_CLIENT_COLUMNS)


DB_MEAL = 'Meal'

DB_MEAL_ID_COLUMN = 'mealId'
DB_MEAL_NAME_COLUMN = 'name'
DB_MEAL_SELLER_PRICE_COLUMN = 'sellerPrice'
DB_MEAL_INSTRUCTIONS_COLUMN = 'instructions'
DB_MEAL_AREA_COLUMN = 'area'
DB_MEAL_CATEGORY_COLUMN = 'category'
DB_MEAL_IMAGE_URL_COLUMN = 'imageUrl'


DB_MEAL_COLUMNS = (DB_MEAL_ID_COLUMN, DB_MEAL_NAME_COLUMN, DB_MEAL_SELLER_PRICE_COLUMN, DB_MEAL_INSTRUCTIONS_COLUMN, DB_MEAL_AREA_COLUMN,
                   DB_MEAL_CATEGORY_COLUMN, DB_MEAL_IMAGE_URL_COLUMN)


DB_MEAL_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} VARCHAR(45) NOT NULL,
    {2} FLOAT NOT NULL,
    {3} VARCHAR(120) NULL,
    {4} VARCHAR(45) NULL,
    {5} VARCHAR(45) NULL,
    {6} VARCHAR(120) NULL,
    PRIMARY KEY ({0}))
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_MEAL, *DB_MEAL_COLUMNS)


DB_ORDER = 'Order'

DB_ORDER_ID_COLUMN = 'orderId'
DB_ORDER_CLIENT_CPF_COLUMN = 'clientCpf'

DB_ORDER_COLUMNS = (DB_ORDER_ID_COLUMN, DB_ORDER_CLIENT_CPF_COLUMN)

DB_ORDER_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} CHAR(11) NOT NULL,
    PRIMARY KEY ({0}),
    INDEX `client_cpf_index` ({1} ASC) VISIBLE,
    CONSTRAINT `fk_clientCpf_orderId`
        FOREIGN KEY ({1})
        REFERENCES {db_name}.{fk_table} ({fk_column})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_ORDER, fk_table=DB_CLIENT, fk_column=DB_CLIENT_CPF_COLUMN, *DB_ORDER_COLUMNS)

DB_ORDER_MEAL = 'OrderMeal'

DB_ORDER_MEAL_QUANTITY_COLUMN = 'quantity'

DB_ORDER_MEAL_COLUMNS = (
    DB_ORDER_ID_COLUMN, DB_MEAL_ID_COLUMN, DB_ORDER_MEAL_QUANTITY_COLUMN)


DB_ORDER_MEAL_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} INT NOT NULL,
    {2} INT NOT NULL DEFAULT 1,
    INDEX `orderId_index` ({0} ASC) VISIBLE,
    INDEX `mealId_index` ({1} ASC) VISIBLE,
    PRIMARY KEY ({0}, {1}),
    CONSTRAINT `fk_orderId_mealId`
        FOREIGN KEY ({0})
        REFERENCES {db_name}.{fk_table_1} ({0})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION,
    CONSTRAINT `fk_mealId_orderId`
        FOREIGN KEY ({1})
        REFERENCES {db_name}.{fk_table_2} ({1})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_ORDER_MEAL, fk_table_1=DB_ORDER, fk_table_2=DB_MEAL, *DB_ORDER_MEAL_COLUMNS)


DB_MEAL_STOCK = 'MealStock'

DB_MEAL_STOCK_CURRENT_QNT_COLUMN = 'currentQuantity'
DB_MEAL_STOCK_IDEAL_QNT_COLUMN = 'idealQuantity'
DB_MEAL_STOCK_COST_PRICE_COLUMN = 'costPrice'
DB_MEAL_STOCK_AVAILABILITY_COLUMN = 'availability'

DB_MEAL_STOCK_COLUMNS = (DB_MEAL_ID_COLUMN, DB_MEAL_STOCK_CURRENT_QNT_COLUMN,
                         DB_MEAL_STOCK_IDEAL_QNT_COLUMN, DB_MEAL_STOCK_COST_PRICE_COLUMN, DB_MEAL_STOCK_AVAILABILITY_COLUMN)

DB_MEAL_STOCK_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} INT NOT NULL,
    {2} INT NOT NULL,
    {3} FLOAT NOT NULL,
    {4} TINYINT NOT NULL,
    PRIMARY KEY ({0}),
    CONSTRAINT `fk_mealId_stock`
        FOREIGN KEY ({0})
        REFERENCES {db_name}.{fk_table} ({0})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_MEAL_STOCK, fk_table=DB_MEAL, *DB_MEAL_STOCK_COLUMNS)


DB_STOCK_ORDER = 'StockOrder'

DB_STOCK_ORDER_ID_COLUMN = 'stockOrderId'
DB_STOCK_ORDER_PRICE_COLUMN = 'price'
DB_STOCK_ORDER_DATE_COLUMN = 'date'
DB_STOCK_ORDER_QUANTITY_COLUMN = 'quantity'

DB_STOCK_ORDER_COLUMNS = (DB_STOCK_ORDER_ID_COLUMN, DB_MEAL_ID_COLUMN,
                          DB_STOCK_ORDER_PRICE_COLUMN, DB_STOCK_ORDER_DATE_COLUMN, DB_STOCK_ORDER_QUANTITY_COLUMN)


DB_STOCK_ORDER_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} INT NOT NULL,
    {2} FLOAT NOT NULL,
    {3} DATE NOT NULL,
    {4} INT NOT NULL,
    PRIMARY KEY ({0}),
    INDEX `mealId_index` ({1} ASC) VISIBLE,
    CONSTRAINT `fk_mealId_stockOrderId`
        FOREIGN KEY ({0})
        REFERENCES {db_name}.{fk_table} ({1})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_STOCK_ORDER, fk_table=DB_MEAL_STOCK, *DB_STOCK_ORDER_COLUMNS)


DB_TRANSACTION = 'Transaction'

DB_TRANSACTION_ID_COLUMN = 'idTransaction'
DB_TRANSACTION_VALUE_COLUMN = 'value'
DB_TRANSACTION_DATE_COLUMN = 'date'
DB_TRANSACTION_CURRENT_AMOUNT_COLUMN = 'currentAmount'
DB_TRANSACTION_NAME_COLUMN = 'name'
DB_TRANSACTION_CODE_COLUMN = 'code'

DB_TRANSACTION_COLUMNS = (DB_TRANSACTION_ID_COLUMN, DB_TRANSACTION_VALUE_COLUMN, DB_TRANSACTION_DATE_COLUMN, DB_TRANSACTION_CURRENT_AMOUNT_COLUMN,
                          DB_TRANSACTION_NAME_COLUMN, DB_TRANSACTION_CODE_COLUMN)


DB_TRANSACTION_CREATE_QUERY = '''CREATE TABLE IF NOT EXISTS {db_name}.{table_name}(
    {0} INT NOT NULL,
    {1} FLOAT NOT NULL,
    {2} DATETIME NOT NULL,
    {3} FLOAT NOT NULL,
    {4} VARCHAR(45) NOT NULL,
    {5} INT NULL,
    PRIMARY KEY ({0}),
    INDEX `code_idx` ({5} ASC) VISIBLE,
    CONSTRAINT `fk_stockOrderId_code`
        FOREIGN KEY ({5})
        REFERENCES {db_name}.{fk_table_1} ({fk_column_1})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION,
    CONSTRAINT `fk_orderId_code`
        FOREIGN KEY ({5})
        REFERENCES {db_name}.{fk_table_2} ({fk_column_2})
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
    ENGINE = InnoDB'''.format(db_name=DB, table_name=DB_TRANSACTION, fk_table_1=DB_STOCK_ORDER, fk_column_1=DB_STOCK_ORDER_ID_COLUMN, fk_table_2=DB_ORDER, fk_column_2=DB_ORDER_ID_COLUMN, *DB_TRANSACTION_COLUMNS)
